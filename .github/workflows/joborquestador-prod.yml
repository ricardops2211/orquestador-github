name: Orquestador PROD

on:
  repository_dispatch:
    types: [jira-orquestador-produccion]
  workflow_dispatch:
    inputs:
      issue_key:
        description: "Clave del ticket de Jira"
        required: true
      branch_name:
        description: "Rama asociada al ticket"
        required: true

permissions:
  contents: write

jobs:
  run-prod-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Instalar jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Leer RC Tag del JSON
        id: read-tag
        run: |
          RC_TAG=$(jq -r '.prod[0].tag_name' orquestador-jobs.json)
          echo "‚úÖ RC Tag le√≠do: $RC_TAG"
          echo "rc_tag=$RC_TAG" >> $GITHUB_OUTPUT

      - name: Disparar workflow deploy-prod
        id: trigger
        run: |
          REPO="ricardops2211/repo-jira"
          WORKFLOW_ID="deploy-prod.yml"
          RC_TAG="${{ steps.read-tag.outputs.rc_tag }}"

          START_TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "start_ts=$START_TS" >> $GITHUB_OUTPUT

          echo "üöÄ Disparando workflow con RC_TAG=$RC_TAG ..."
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$REPO/dispatches \
            -d "{\"event_type\":\"trigger-prod\",\"client_payload\":{\"tag\":\"$RC_TAG\"}}"

      - name: Esperar a que termine deploy-prod
        run: |
          set -euo pipefail
          REPO="ricardops2211/repo-jira"
          WORKFLOW_ID="deploy-prod.yml"
          START_TS="${{ steps.trigger.outputs.start_ts }}"

          echo "üìå Timestamp de inicio: $START_TS"

          # Buscar el run m√°s reciente despu√©s del START_TS
          for i in {1..20}; do
            RUNS=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/$REPO/actions/workflows/$WORKFLOW_ID/runs?event=repository_dispatch&per_page=5")

            RUN_ID=$(echo "$RUNS" | jq -r --arg ts "$START_TS" '.workflow_runs[] | select(.created_at > $ts) | .id' | head -n 1)

            if [ -n "$RUN_ID" ] && [ "$RUN_ID" != "null" ]; then
              echo "üéØ Run encontrado: $RUN_ID"
              break
            fi

            echo "‚åõ Esperando que aparezca el run..."
            sleep 60
          done

          if [ -z "$RUN_ID" ]; then
            echo "‚ùå No se encontr√≥ run nuevo"
            exit 1
          fi

          # Polling hasta que termine
          for i in {1..30}; do
            RUN=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID")

            STATUS=$(echo "$RUN" | jq -r '.status')
            CONCLUSION=$(echo "$RUN" | jq -r '.conclusion')

            echo "üîé Run $RUN_ID ‚Üí status=$STATUS conclusion=$CONCLUSION"

            if [ "$STATUS" == "completed" ]; then
              if [ "$CONCLUSION" == "success" ]; then
                echo "‚úÖ Workflow de PROD termin√≥ OK"
                exit 0
              else
                echo "‚ùå Workflow de PROD fall√≥ ($CONCLUSION)"
                exit 1
              fi
            fi

            sleep 30
          done

          echo "‚ùå Timeout esperando run $RUN_ID"
          exit 1

      - name: Transicionar hacia RATIFICACION
        env:
          JIRA_USER: ${{ secrets.JIRA_USER }}
          JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
          ISSUE_KEY: ${{ github.event.inputs.issue_key }}
          TRANSITION_ID: ${{ github.event.inputs.transition_id }}
          JIRA_SITE: "https://marketingpachas.atlassian.net"
        run: |
          echo "üìå Transiciones disponibles para el issue $ISSUE_KEY:"
          curl -s -X GET \
            -u "$JIRA_USER:$JIRA_TOKEN" \
            -H "Accept: application/json" \
            "$JIRA_SITE/rest/api/3/issue/$ISSUE_KEY/transitions" | jq .

          echo "-----------------------------------------"
          echo "‚û°Ô∏è Transicionando el issue $ISSUE_KEY hacia RATIFICACION"

          curl -s -X POST \
            -u "$JIRA_USER:$JIRA_TOKEN" \
            -H "Content-Type: application/json" \
            --data-raw "{
              \"transition\": { \"id\": \"$TRANSITION_ID\" }
            }" \
            "$JIRA_SITE/rest/api/3/issue/$ISSUE_KEY/transitions"

          echo -e "\n‚úÖ Listo, CAMBIADO A RATIFICACION"




